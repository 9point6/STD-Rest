{
	//R Title of the API it implements
	"service" : "Mobi-cart",
	//R URL format (without query string) of every API request
	"url" : "www.mobi-cart.com/api/{method.url}.{vars.format}",

	//O Describes the documentation of this API.
	"docs" : {
		"root" : "http://www.mobi-cart.com/",
		//R A replacement string which is used to form the method.docs - Typically an URL.
		"pattern" : "http://www.mobi-cart.com/docs/api/{docs_name}_API.html"
	},

	//O A list of variables to make available as {vars.###}
	"vars" : {
		"format" : "json"
	},

	//O The authentication class to use. The below would look for "class.auth.oauth.php" :: Oauth_auth
	// "authentication" : {
	//	"oauth" : {
	//		[key : value]*
	//	}
	// }

	//O A set of fields that is included in requests.
	"static_fields" : {
		//O Fields that are included in all requests.
		"all": ["api_key={api_key}", "user_name={user_name}"],
		//O Fields that are only included in authorised requests
		"auth_only" : [],
		//O Fields that are only included in unauthorised requests
		"unauth_only" : []
	},

	//O Path to check for errors
	"error_check_path" : "error",
	//O Path to return if errors are found.
	"error_return_path" : "error/message",

	//O A list of validation regular expressions to ease per-method validation setting.
	"validators" : {
		"email" : {
			//R - the pattern to match against.
			"pattern": "|^([^@]+)@.*\\.([a-z]+)$|",
			//O - the fields to match against, implicitly including the parent key (in this case, 'email')
			"fields" : ["user_name", "s_merchant_paypal_email", "s_buyer_email", "payPalAddress"]
		},
		"date" : {
			"pattern" : "|^(2[0-9]{3}-[0-1][0-9]-[0-3][0-9]$|",
			"fields" : ["from_date", "to_date", "d_order_date"]
		},
		"shipping_carrier" : {
			"pattern" : "|^(fedex|ups|other)$|"
		},
		"shipping_status"  : {
			"pattern" : "|^(pickedup|intransit|arrived|delivered$|"
		},
		"s_status" : {
			"pattern" : "|^(pending|cancel|processing|completed)$|"
		},
		"store_status" : {
			"pattern" : "|^(active|hidden|sold|coming)$|",
			"fields" : ["status", "department_status", "category_status"]
		},
		"url" : {
			"pattern" : "|^(http(s)?://[a-z0-9-]+(.[a-z0-9-]+)*(:[0-9]+)?(/.*)?)?$|i",
			"fields" : ["companyLogoUrl", "companyWebsite", "product_image_url", "video_url", "gallery_image_url"]
		},
		"numeric" : {
			"pattern" : "|^[0-9]a+$|",
			"fields" : "store_id, territory_id, country_id, state_id, department_id, category_id, parent_category_id, f_price, discount, aggregate_quantity, image_id"
		}
	},

	//R The method definitons
	"methods" : {
		// The key is available as {method.name}.
		// Technically methods can be empty and still work
		// if they have no optional/required fields and the
		// root URL looks for {method.name}.
		//
		// Fields:
		//	required		An array or CSV of required field names. Default = []
		//	optional		An array or CSV of optional field names. Default = []
		//	validation		An object (key : regex) to validate fields against. Default = {}
		//	path 			The path within the result to return. Default = /
		//	request_type	HTTP request method (GET, POST, DELETE, PUT). Default = GET
		//	authenticated	A boolean indicating wether this method should trigger authentication hooks.
		//
		// The method should also include any keys looked for by the and {method.*} replacement.

		"store.get" : {
			"url" : "stores",
			"path" : "store",
			"docs_name" : "store"
		},

		"store.get_settings" : {
			"url" : "store-settings",
			"required" : ["store_id"],
			"path" : "store",
			"docs_name" : "storeStettings"
		},

		"store.get_shipping" : {
			"url" : "store-shipping",
			"required" : ["store_id"],
			"path" : "store",
			"docs_name" : "storeShipping"
		},

		"store.get_tax" : {
			"url" : "store-tax",
			"required" : ["store_id"],
			"path" : "store",
			"docs_name" : "storeTax"
		},

		"store.get_countries" : {
			"url" : "countries",
			"path" : "countries",
			"docs_name" : "getCountries"
		},

		"store.get_states" : {
			"url" : "states",
			"required" : ["territory_id"],
			"path" : "states",
			"docs_name" : "getStates"
		},

		"store.get_shipping_rate": {
			"url" : "shipping-rate",
			"required" : ["store_id", "country_id", "state_id"],
			"path" : "Shipping",
			"docs_name" : "shippingRate"
		},

		"store.set_shipping_rate" : {
			"url" : "set-shipping-rate",
			"request_type" : "post",
			"required" : "store_id,country_id,state_id,shipping_single,shipping_multiple",
			"path" : "message/message",
			"docs_name" : "setShippingRate"
		},

		"products.get_all" : {
			"url" : "store-products",
			"required" : "store_id",
			"path" : "products/products",
			"docs_name" : "storeProducts"
		},

		"products.get_by_department" : {
			"url" : "department-products",
			"required" : "department_id",
			"path" : "products/products",
			"docs_name" : "departmentProducts"
		},

		"products.get_by_subdepartment" : {
			"url" : "category-products",
			"required" : "category_id",
			"path" : "products/products",
			"docs_name" : "categoryProducts"
		},

		"products.get" : {
			"url" : "product-details",
			"required" : "product_id",
			"path" : "Product",
			"docs_name" : "productDetails"
		},

		"products.delete" : {
			"url" : "delete-product",
			"request_type" : "delete",
			"required" : "product_id",
			"path" : "message/message",
			"docs_name" : "deleteProduct"
		},

		"products.add" : {
			"url" : "add-product",
			"request_type" : "post",
			"required" : "department_id, product_name, f_price",
			"optional" : "category_id, product_description, status, discount, product_image_url, sale_label, video_url, aggregate_quantity, featured",
			"path" : "message",
			"docs_name" : "addProduct"
		},

		"products.update" : {
			"url" : "update-product",
			"request_type" : "post",
			"required" : "product_id, product_name, f_price",
			"optional" : "category_id, product_description, status, discount, product_image_url, sale_label, video_url, aggregate_quantity, featured",
			"path" : "message",
			"docs_name" : "updateProduct"
		},

		"products.add_option" : {
			"url" : "add-productOption",
			"request_type" : "post",
			"required" : "product_id, option_title, option_name",
			"optional" : "sku_id, option_quantity",
			"path" : "message",
			"docs_name" : "addProductOption"
		},

		"products.update_option" : {
			"url" : "update-productOption",
			"request_type" : "post",
			"required" : "product_option_id, option_title, option_name",
			"optional" : "sku_id, option_quantity",
			"path" : "message",
			"docs_name" : "updateProductOption"
		},

		"products.add_image" : {
			"url" : "add-product-image",
			"request_type" : "post",
			"required" : "product_id, product_image_url",
			"path" : "message",
			"docs_name" : "addProductImage"
		},

		"products.update_image" : {
			"url" : "update-product-image",
			"request_type" : "post",
			"required" : "product_image_id, product_image_url",
			"path" : "message",
			"docs_name" : "updateProductImages"
		},

		"products.bulk_upload" : {
			"url" : "products-csv-upload",
			"request_type" : "post",
			"required" : "store_id, product_file",
			"path" : "message",
			"validation" : {"product_file" : "|^@.+|"},
			"docs_name" : "bulkUpload"
		},

		"user.get" : {
			"url" : "merchant-profile",
			"path" : "MerchantProfile",
			"docs_name" : "merchantProfile"
		},

		"user.update" : {
			"url" : "update-merchant-profile",
			"request_type" : "post",
			"required" : "firstName",
			"optional" : "lastName, companyLogoUrl, companyWebsite, payPalAddress, companyRegNumber, taxRegNumber",
			"path" : "message/message",
			"docs_name" : "updateMerchantProfile"
		},

		"images.get" : {
			"url" : "store-gallery-images",
			"required" : "store_id",
			"path" : "GalleryImageList/images",
			"docs_name" : "galleryImagesUnderStore"
		},

		"images.add" : {
			"url" : "add-gallery-image",
			"request_type" : "post",
			"required" : "store_id, gallery_image_url",
			"path" : "message/message",
			"docs_name" : "addGalleryImagesUnderStore"
		},

		"images.delete" : {
			"url" : "delete-gallery-image",
			"request_type" : "delete",
			"required" : "image_id",
			"path" : "message/message",
			"docs_name" : "deleteGalleryImage"
		},

		"order.add" : {
			"url" : "add-product-order",
			"request_type" : "post",
			"required" : ["user_name", "s_merchant_paypal_email", "s_buyer_name", "s_buyer_email", "i_buyer_phone", 
						  "s_shipping_street", "s_shipping_city", "s_shipping_state","s_shipping_postal_code",
						  "s_shipping_country", "s_billing_street", "s_billing_city", "s_billing_state",
						  "s_billing_postal_code", "s_billing_country", "d_order_date", "s_status"],
			"path" : "message/message",
			"docs_name" : "addProductOrder"
		},

		"order.get_all" : {
			"url" : "all-orders",
			"path" : "OrderList/orders",
			"docs_name" : "allOrders"
		},

		"order.get" : {
			"url" : "order-details",
			"required": "order_id",
			"path" : "order-details",
			"docs_name" : "orderDetails"
		},

		"order.get_by_date" : {
			"url": "order-by-date",
			"required" : "from_date,to_date",
			"path" : "OrderList/orders",
			"docs_name" : "ordersByDate"
		},

		"order.get_history" : {
			"url" : "order-history",
			"path" : "OrderList/orders",
			"docs_name" : "orderHistory"
		},

		"order.add_item" : {
			"url" : "add-OrderItem",
			"request_type" : "POST",
			"required" : "product_id, order_id, amount_quantity",
			"optional" : "product_option_id",
			"path" : "message/message",
			"docs_name" : "addOrderItem"
		},

		"order.update_item" : {
			"url" : "update-OrderItem",
			"request_type" : "post",
			"required" : "order_item_id, amount, quantity",
			"path" : "message/message",
			"docs_name" : "updateOrderItem"
		},

		"order.get_shipping_status" : {
			"url" : "shipping-status",
			"required" : "tracking_number",
			"path" : "OrderDetails",
			"docs_name" : "getShippingStatus"
		},

		"order.add_shipping_status" : {
			"url" : "add-shipping-status",
			"request_type" : "post",
			"required" : "order_id, tracking_number, shipping_carrier, shipping_status",
			"path" : "message/message",
			"docs_name" : "addShippingStatus"
		},

		"order.update_shipping_status" : {
			"url" : "update-shipping-status",
			"request_type" : "post",
			"required" : "tracking_number, shipping_status",
			"path" : "message/message",
			"docs_name" : "updateShippingStatus"
		},

		"department.get" : {
			"url" : "store-departments",
			"required" : "store_id",
			"path" : "DepartmentList/departments",
			"docs_name" : "departmentsForStore"
		},

		"department.add" : {
			"url" : "add-department",
			"request_type" : "post",
			"required" : "store_id, department_name",
			"optional" : "department_status",
			"path" : "message",
			"docs_name" : "addDepartmentUnderStore"
		},

		"department.update" : {
			"url" : "update-department",
			"request_type" : "post",
			"required" : "department_id, department_name",
			"optional" : "department_status",
			"path" : "message/message",
			"docs_name" : "updateDepartmentUnderStore"
		},

		"department.delete" : {
			"url" : "delete-department",
			"request_type" : "delete",
			"required" : "department_id",
			"path" : "message/message",
			"docs_name" : "deleteDepartmentUnderStore"
		},

		"subdepartment.add" : {
			"url" : "add-sub-department-nested",
			"request_type" : "post",
			"required" : "department_id, parent_category_id, category_name, category_status",
			"path" : "message",
			"docs_name" : "addSubDepartmentUnderSubDepartment"
		},

		"subdepartment.update" : {
			"url" : "update-sub-department-nested",
			"request_type" : "post",
			"required" : "category-id, parent_category_id, category_name",
			"optional" : "category_status",
			"path" : "message/message",
			"docs_name" : "updateSubDepartmentUnderSubDepartment"
		},

		"subdepartment.delete" : {
			"url" : "delete-sub-department",
			"request_type" : "delete",
			"required" : "category_id",
			"path" : "message/message",
			"docs_name" : "deleteSubDepartment"
		}
	}
}